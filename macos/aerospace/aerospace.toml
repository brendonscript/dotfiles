# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 5

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'vertical'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

on-focus-changed = [
  'exec-and-forget sketchybar --trigger aerospace_focus_change',
]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# [workspace-to-monitor-force-assignment]
# M = 'secondary'
# N = 'secondary'
# W = 'secondary'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = [{ monitor."built-in" = 10 }, 40]
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# Disable hide and hide others
cmd-h = []
cmd-alt-h = []

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-leftSquareBracket = 'layout tiles horizontal vertical'
alt-rightSquareBracket = 'layout v_accordion h_tiles'
alt-semicolon = 'layout floating tiling'
alt-backslash = 'layout horizontal vertical'
alt-f = 'fullscreen'
alt-z = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus --boundaries-action wrap-around-the-workspace left'
alt-j = 'focus --boundaries-action wrap-around-the-workspace down'
alt-k = 'focus --boundaries-action wrap-around-the-workspace up'
alt-l = 'focus --boundaries-action wrap-around-the-workspace right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-b = 'workspace B'
alt-c = 'workspace C'
alt-g = 'workspace G'
alt-m = 'workspace M'
alt-n = 'workspace N'
alt-p = 'workspace P'
# alt-o = 'workspace O'
alt-t = 'workspace T'
alt-w = 'workspace W'

alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-o = 'workspace-back-and-forth'
alt-i = 'focus-monitor --wrap-around next'
alt-a = 'mode adjust'


# [mode.apps.binding]
# alt-t = ['exec-and-forget open -a /Applications/Ghostty.app', 'mode main']

[mode.adjust.binding]
esc = 'mode main'
q = 'mode main'
alt-a = ['workspace-back-and-forth', 'mode main']
r = ['reload-config', 'mode main']

backspace = ['close-all-windows-but-current', 'mode main']

f = ['flatten-workspace-tree', 'mode main'] # reset layout
equal = ['balance-sizes', 'mode main']
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
tab = ['move-workspace-to-monitor --wrap-around next', 'mode main']

x = ['close', 'mode main']

h = ['join-with left', 'mode main']
j = ['join-with down', 'mode main']
k = ['join-with up', 'mode main']
l = ['join-with right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
#
# Hold alt+shift if you want to stay in adjust mode
b = ['move-node-to-workspace B', 'mode main']
c = ['move-node-to-workspace C', 'mode main']
g = ['move-node-to-workspace G', 'mode main']
m = ['move-node-to-workspace M', 'mode main']
n = ['move-node-to-workspace N', 'mode main']
p = ['move-node-to-workspace P', 'mode main']
t = ['move-node-to-workspace T', 'mode main']
w = ['move-node-to-workspace W', 'mode main']

1 = ['move-node-to-workspace 1', 'mode main']
2 = ['move-node-to-workspace 2', 'mode main']
3 = ['move-node-to-workspace 3', 'mode main']
4 = ['move-node-to-workspace 4', 'mode main']
5 = ['move-node-to-workspace 5', 'mode main']

alt-shift-b = 'move-node-to-workspace B'
alt-shift-c = 'move-node-to-workspace C'
alt-shift-g = 'move-node-to-workspace G'
alt-shift-m = 'move-node-to-workspace M'
alt-shift-n = 'move-node-to-workspace N'
alt-shift-p = 'move-node-to-workspace P'
alt-shift-t = 'move-node-to-workspace T'
alt-shift-w = 'move-node-to-workspace W'
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'


# Move workspace to current monitor
alt-b = ['summon-workspace B', 'mode main']
alt-c = ['summon-workspace C', 'mode main']
alt-g = ['summon-workspace G', 'mode main']
alt-m = ['summon-workspace M', 'mode main']
alt-n = ['summon-workspace N', 'mode main']
alt-p = ['summon-workspace P', 'mode main']
alt-t = ['summon-workspace T', 'mode main']
alt-w = ['summon-workspace W', 'mode main']

alt-1 = ['summon-workspace 1', 'mode main']
alt-2 = ['summon-workspace 2', 'mode main']
alt-3 = ['summon-workspace 3', 'mode main']
alt-4 = ['summon-workspace 4', 'mode main']
alt-5 = ['summon-workspace 5', 'mode main']


[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = "move-node-to-workspace B"

# [[on-window-detected]]
# if.app-id = 'com.google.Chrome'
# run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = "move-node-to-workspace C"

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = "move-node-to-workspace C"

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'com.facebook.archon.developerID'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'com.mimestream.Mimestream'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'com.TickTick.task.mac'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'io.raindrop.macapp'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'com.electron.pocket-casts'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = "move-node-to-workspace W"

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = "move-node-to-workspace W"

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = "move-node-to-workspace W"
