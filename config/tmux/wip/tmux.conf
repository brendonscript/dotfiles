# if run as "tmux attach", create a session if one does not already exist
# new-session -n $HOST

# set-option -g default-shell /opt/homebrew/bin/zsh

### Plugins ###

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin 'laktak/extrakto'
# set -g @plugin 'tmux-plugins/tmux-pain-control'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-yank'
#
# # Plugin Settings
# set -g @continuum-restore 'off'
# TMUX_FZF_LAUNCH_KEY="C-f"
# TMUX_FZF_OPTIONS="-p 50%"
#
# set -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
#
#
source-file ~/.config/tmux/tmux.reset.conf
set-option -g default-terminal 'screen-256color'
set-option -g terminal-overrides ',xterm-256color:RGB'

# unbind-key C-b
# unbind-key C-a
# set-option -g prefix C-a
# bind-key C-a send-prefix

set -g prefix ^A
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 1000000     # increase history size (from 2,000)
set -g renumber-windows on       # renumber all windows when any window is closed
set -g set-clipboard on          # use system clipboard
set -g status-position top       # macOS / darwin style
set -g default-terminal "${TERM}"
setw -g mode-keys vi
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'

set -g base-index 1
setw -g pane-base-index 1
setw -g mouse on
set -g set-titles on
set -g set-titles-string "#T"

# # Set window notifications
# setw -g monitor-activity off
# set -g visual-activity on

# set-option -g status-interval 1
# set-option -g automatic-rename on
# set-option -g automatic-rename-format '#{b:pane_current_path}'
# set -g detach-on-destroy off

set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'omerxx/tmux-floax'
set -g @floax-width '80%'
set -g @floax-height '80%'
set -g @floax-border-color 'magenta'
set -g @floax-text-color 'blue'
set -g @floax-bind 'p'
set -g @floax-change-path 'true'
set -g @sessionx-bind-zo-new-window 'ctrl-y'
set -g @sessionx-auto-accept 'off'
set -g @sessionx-custom-paths '/Users/brendon/.dotfiles'
set -g @sessionx-bind 'o'
set -g @sessionx-x-path '~/.dotfiles'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '75%'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-custom-paths-subdirectories 'false'
set -g @sessionx-filter-current 'false'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
set -g @catppuccin_status_modules_right "directory date_time"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{b:pane_current_path}"
set -g @catppuccin_date_time_text "%H:%M"

### Keybinds ###

bind-key R source-file ~/.config/tmux/tmux.conf \; display "Reloaded ~/.tmux.conf"
bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

# Windows
bind-key c new-window
bind-key n next-window
bind-key p previous-window
# bind-key M-space last-window
bind-key C-a last-window
bind-key space next-layout
bind-key C-space select-layout
bind-key M-v select-layout main-vertical
bind-key M-s select-layout main-horizontal
bind-key M-V select-layout even-vertical
bind-key M-S select-layout even-horizontal

# Sessions
bind-key C-n switch-client -n
bind-key C-p switch-client -p
bind-key T choose-session
bind-key t choose-tree

# Panes
bind-key v split-window -hc "#{pane_current_path}"
bind-key s split-window -vc "#{pane_current_path}"

bind-key enter next-layout
bind-key C-o rotate-window

bind-key a last-pane
bind-key q display-panes

bind-key S command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key B command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key b break-pane

bind-key -n M-z resize-pane -Z

# Vim Integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'C-M-h' if-shell "$is_vim" 'send-keys C-M-h' 'resize-pane -L 1'
bind -n 'C-M-j' if-shell "$is_vim" 'send-keys C-M-j' 'resize-pane -D 1'
bind -n 'C-M-k' if-shell "$is_vim" 'send-keys C-M-k' 'resize-pane -U 1'
bind -n 'C-M-l' if-shell "$is_vim" 'send-keys C-M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

bind-key -T copy-mode-vi L send -X end-of-line
bind-key -T copy-mode-vi H send -X back-to-indentation
bind-key -T copy-mode-vi Escape send -X cancel

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Copy Mode
bind-key [ copy-mode
bind-key ] copy-mode
bind-key P paste-buffer


### Setup ###

# Enable pbcopy/pbpaste in tmux.
if-shell \
'test "$(uname -s)" = Darwin && type reattach-to-user-namespace > /dev/null' \
'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

# TPM: https://github.com/tmux-plugins/tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'
